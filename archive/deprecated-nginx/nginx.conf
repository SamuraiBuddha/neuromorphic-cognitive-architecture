# Neuromorphic Thalamus - Routing & Load Balancing Configuration
# Routes traffic between brain regions based on request type

events {
    worker_connections 1024;
}

http {
    # Upstream brain regions
    upstream cerebellum_cluster {
        server cerebellum:7474;  # Neo4j HTTP
    }
    
    upstream hippocampus_cluster {
        server hippocampus:6379;  # Redis (TCP passthrough needed)
    }
    
    upstream imagination_cluster {
        server imagination-processor:8000;  # FastAPI
    }
    
    upstream brainstem_cluster {
        server brainstem:9092;  # Kafka (TCP passthrough needed)
    }

    # Default server configuration
    server {
        listen 80;
        server_name localhost;

        # Root health check
        location / {
            return 200 '{"status":"neuromorphic_thalamus","regions":["cerebellum","hippocampus","imagination","brainstem"],"routing":"active"}\n';
            add_header Content-Type application/json;
        }

        # Route to Neo4j Browser (Cerebellum)
        location /cerebellum/ {
            proxy_pass http://cerebellum_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to Imagination Processor API
        location /imagination/ {
            proxy_pass http://imagination_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health endpoint for imagination processor
        location /health {
            proxy_pass http://imagination_cluster/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Brain region status dashboard
        location /status {
            return 200 '{"cerebellum":"http://localhost:7475","hippocampus":"redis://localhost:6380","imagination":"http://localhost:8001","brainstem":"kafka://localhost:9093","thalamus":"http://localhost:8080"}\n';
            add_header Content-Type application/json;
        }

        # Memory routing (intelligent decision making)
        location /memory {
            # Route memory requests to appropriate brain regions
            # This could be enhanced with lua scripting for intelligent routing
            proxy_pass http://imagination_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server (optional)
    server {
        listen 443 ssl;
        server_name localhost;

        # Self-signed certificate (for development)
        ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
        ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

        # Same routing as HTTP
        location / {
            return 200 '{"status":"neuromorphic_thalamus_ssl","regions":["cerebellum","hippocampus","imagination","brainstem"],"routing":"active"}\n';
            add_header Content-Type application/json;
        }

        location /cerebellum/ {
            proxy_pass http://cerebellum_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /imagination/ {
            proxy_pass http://imagination_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

# Stream block for TCP proxying (Redis, Kafka)
stream {
    # Redis proxy (Hippocampus)
    upstream redis_backend {
        server hippocampus:6379;
    }
    
    server {
        listen 6381;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }

    # Kafka proxy (Brainstem) 
    upstream kafka_backend {
        server brainstem:9092;
    }
    
    server {
        listen 9094;
        proxy_pass kafka_backend;
        proxy_timeout 3s;
    }
}
